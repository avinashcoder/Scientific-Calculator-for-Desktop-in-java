/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scientific.calculator;

/**
 *
 * @author LAB1-C017
 */
public class ScientificCalculator extends javax.swing.JFrame {

    /**
     * Creates new form ScientificCalculator
     */
    public ScientificCalculator() {
        initComponents();
    }
    String str;
    double value=0,valuetwo=1,result;
    String operation;
    int i=1;
    int subs=1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        outputone = new javax.swing.JLabel();
        outputtwo = new javax.swing.JLabel();
        format = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        squareroot = new javax.swing.JButton();
        square = new javax.swing.JButton();
        power = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        e = new javax.swing.JButton();
        ln = new javax.swing.JButton();
        log = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        del = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        six = new javax.swing.JButton();
        three = new javax.swing.JButton();
        point = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        five = new javax.swing.JButton();
        two = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        four = new javax.swing.JButton();
        one = new javax.swing.JButton();
        mod = new javax.swing.JButton();
        add = new javax.swing.JButton();
        sub = new javax.swing.JButton();
        mul = new javax.swing.JButton();
        div = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        on = new javax.swing.JButton();
        off = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jLabel1.setBackground(new java.awt.Color(0, 0, 153));
        jLabel1.setFont(new java.awt.Font("Aharoni", 1, 55)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" Calculator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(157, 157, 157))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        outputone.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        outputone.setForeground(new java.awt.Color(255, 255, 255));
        outputone.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        outputone.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        outputtwo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        outputtwo.setForeground(new java.awt.Color(255, 255, 255));
        outputtwo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        outputtwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        format.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        format.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(format, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(outputone, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(outputtwo, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputone, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(format, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(outputtwo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));

        jPanel4.setBackground(new java.awt.Color(0, 0, 153));

        squareroot.setBackground(new java.awt.Color(0, 0, 153));
        squareroot.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        squareroot.setForeground(new java.awt.Color(255, 255, 255));
        squareroot.setText("Sqrt");
        squareroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squarerootActionPerformed(evt);
            }
        });

        square.setBackground(new java.awt.Color(0, 0, 153));
        square.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        square.setForeground(new java.awt.Color(255, 255, 255));
        square.setText("X^2");
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });

        power.setBackground(new java.awt.Color(0, 0, 153));
        power.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        power.setForeground(new java.awt.Color(255, 255, 255));
        power.setText("X^n");
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        pi.setBackground(new java.awt.Color(0, 0, 153));
        pi.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        pi.setForeground(new java.awt.Color(255, 255, 255));
        pi.setText("PI");
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        e.setBackground(new java.awt.Color(0, 0, 153));
        e.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        e.setForeground(new java.awt.Color(255, 255, 255));
        e.setText("e");
        e.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eActionPerformed(evt);
            }
        });

        ln.setBackground(new java.awt.Color(0, 0, 153));
        ln.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        ln.setForeground(new java.awt.Color(255, 255, 255));
        ln.setText("ln");
        ln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnActionPerformed(evt);
            }
        });

        log.setBackground(new java.awt.Color(0, 0, 153));
        log.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        log.setForeground(new java.awt.Color(255, 255, 255));
        log.setText("log");
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        sin.setBackground(new java.awt.Color(0, 0, 153));
        sin.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        sin.setForeground(new java.awt.Color(255, 255, 255));
        sin.setText("sin");
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        cos.setBackground(new java.awt.Color(0, 0, 153));
        cos.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        cos.setForeground(new java.awt.Color(255, 255, 255));
        cos.setText("cos");
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        tan.setBackground(new java.awt.Color(0, 0, 153));
        tan.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        tan.setForeground(new java.awt.Color(255, 255, 255));
        tan.setText("tan");
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        del.setBackground(new java.awt.Color(0, 0, 153));
        del.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        del.setForeground(new java.awt.Color(255, 255, 255));
        del.setText("<--");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        nine.setBackground(new java.awt.Color(0, 0, 153));
        nine.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        nine.setForeground(new java.awt.Color(255, 255, 255));
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(0, 0, 153));
        reset.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("C");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        six.setBackground(new java.awt.Color(0, 0, 153));
        six.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        six.setForeground(new java.awt.Color(255, 255, 255));
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        three.setBackground(new java.awt.Color(0, 0, 153));
        three.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        three.setForeground(new java.awt.Color(255, 255, 255));
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        point.setBackground(new java.awt.Color(0, 0, 153));
        point.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        point.setForeground(new java.awt.Color(255, 255, 255));
        point.setText(".");
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });

        eight.setBackground(new java.awt.Color(0, 0, 153));
        eight.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        eight.setForeground(new java.awt.Color(255, 255, 255));
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        five.setBackground(new java.awt.Color(0, 0, 153));
        five.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        five.setForeground(new java.awt.Color(255, 255, 255));
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        two.setBackground(new java.awt.Color(0, 0, 153));
        two.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        two.setForeground(new java.awt.Color(255, 255, 255));
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        zero.setBackground(new java.awt.Color(0, 0, 153));
        zero.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        zero.setForeground(new java.awt.Color(255, 255, 255));
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        seven.setBackground(new java.awt.Color(0, 0, 153));
        seven.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        seven.setForeground(new java.awt.Color(255, 255, 255));
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        four.setBackground(new java.awt.Color(0, 0, 153));
        four.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        four.setForeground(new java.awt.Color(255, 255, 255));
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        one.setBackground(new java.awt.Color(0, 0, 153));
        one.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        one.setForeground(new java.awt.Color(255, 255, 255));
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        mod.setBackground(new java.awt.Color(0, 0, 153));
        mod.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        mod.setForeground(new java.awt.Color(255, 255, 255));
        mod.setText("%");
        mod.setActionCommand("");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(0, 0, 153));
        add.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        sub.setBackground(new java.awt.Color(0, 0, 153));
        sub.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        sub.setForeground(new java.awt.Color(255, 255, 255));
        sub.setText("-");
        sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subActionPerformed(evt);
            }
        });

        mul.setBackground(new java.awt.Color(0, 0, 153));
        mul.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        mul.setForeground(new java.awt.Color(255, 255, 255));
        mul.setText("*");
        mul.setActionCommand("");
        mul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulActionPerformed(evt);
            }
        });

        div.setBackground(new java.awt.Color(0, 0, 153));
        div.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        div.setForeground(new java.awt.Color(255, 255, 255));
        div.setText("/");
        div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divActionPerformed(evt);
            }
        });

        equal.setBackground(new java.awt.Color(0, 0, 153));
        equal.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        equal.setForeground(new java.awt.Color(255, 255, 255));
        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Developed by Avinash Kumar Singh (CSE 3rd Year)");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(squareroot, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(log, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ln, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(e, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(power, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(square, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(six, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(nine, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(eight, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(five, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(del)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(equal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mul, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mod, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(div, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addGap(2, 2, 2))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(square, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(del)
                        .addComponent(reset)
                        .addComponent(equal))
                    .addComponent(squareroot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(power, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nine)
                        .addComponent(eight)
                        .addComponent(seven)
                        .addComponent(add))
                    .addComponent(sin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pi)
                    .addComponent(cos)
                    .addComponent(six)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(four)
                    .addComponent(sub))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(e, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(three)
                        .addComponent(two)
                        .addComponent(one)
                        .addComponent(mul)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ln)
                    .addComponent(point)
                    .addComponent(log, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zero)
                    .addComponent(mod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(div))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(16, 16, 16))
        );

        on.setBackground(new java.awt.Color(0, 153, 0));
        on.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        on.setForeground(new java.awt.Color(255, 255, 255));
        on.setText("ON");
        on.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onActionPerformed(evt);
            }
        });

        off.setBackground(new java.awt.Color(204, 0, 0));
        off.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        off.setForeground(new java.awt.Color(255, 255, 255));
        off.setText("OFF");
        off.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(424, 424, 424)
                .addComponent(on, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(off)
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(on)
                    .addComponent(off))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(590, 722));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void firstinput(){
        if(!(outputtwo.getText().equals("")))
        {
            if(operation.equals("+"))
            {
            value=Double.parseDouble(outputtwo.getText())+value;
            outputtwo.setText("");
            }
            if(operation.equals("-"))
            {
                if(subs==1)
                {
                  value=Double.parseDouble(outputtwo.getText())+value; 
                  subs=0;
                }
                else
                {
                    value=value-Double.parseDouble(outputtwo.getText());
                }
            
            outputtwo.setText("");
            }
            
            if(operation.equals("*"))
            {
            valuetwo=Double.parseDouble(outputtwo.getText())*valuetwo;
            value=valuetwo;
            valuetwo=value;
            outputtwo.setText("");
            }
            if(operation.equals("/"))
            {
                value=Double.parseDouble(outputtwo.getText());
                outputtwo.setText("");
            }
            if(operation.equals("%"))
            {
                value=Double.parseDouble(outputtwo.getText());
                outputtwo.setText("");
            }
        }
        
        i=1;
    }
    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"0");
        }
        
    }//GEN-LAST:event_zeroActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"9");
        }
    }//GEN-LAST:event_nineActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"1");
        }
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"2");
        }
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"3");
        }
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"4");
        }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"5");
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"6");
        }
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"7");
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        outputtwo.setText(str+"8");
        }
    }//GEN-LAST:event_eightActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        operation="+";
        firstinput();
        outputone.setText(String.valueOf(value)+"+");
        
    }//GEN-LAST:event_addActionPerformed

    private void pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        str=outputtwo.getText();
        if(!(str.contains(".")))
        {
            if(outputtwo.getText().equals(""))
            {
               outputtwo.setText("0."); 
            }
            else
            outputtwo.setText(str+".");
        }
        }
    }//GEN-LAST:event_pointActionPerformed

    private void subActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subActionPerformed
        // TODO add your handling code here:
        if(outputtwo.getText().equals(""))
        {
            outputtwo.setText("-");
        }
        else
        {
        operation="-";
        firstinput();
        outputone.setText(String.valueOf(value)+"-");
        }
    }//GEN-LAST:event_subActionPerformed

    private void mulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulActionPerformed
        // TODO add your handling code here:
        operation="*";
        firstinput();
        outputone.setText(String.valueOf(value)+"*");
       
    }//GEN-LAST:event_mulActionPerformed

    private void divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divActionPerformed
        // TODO add your handling code here:
        operation="/";
        firstinput();
        outputone.setText(String.valueOf(value)+"/");
        
    }//GEN-LAST:event_divActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        // TODO add your handling code here:
        try
        {
        if(!(outputtwo.getText().equals(""))&&(!outputone.getText().contains("=")))
        {
        valuetwo=Double.parseDouble(outputtwo.getText());
        outputone.setText(outputone.getText()+String.valueOf(valuetwo)+"=");
        i=0;
        switch(operation)
        {
           case "+":
               value=value+valuetwo;
               break;
           case "-":
               value=value-valuetwo;
               break;
           case "*":
               value=value*valuetwo;
               break;
           case "/":
               value=value/valuetwo;
               break;
           case "%":
               value=value%valuetwo;
               break;
           case "sqr":
               value=Double.parseDouble(outputtwo.getText());
               valuetwo=value*value;
               outputone.setText(String.valueOf(value)+"^2");
               value=valuetwo;
               break;
           case "sqrt":
               value=Double.parseDouble(outputtwo.getText());
               outputone.setText("Sqrt("+String.valueOf(value)+")=");
               value=Math.sqrt(value);
               break;
           case "sin":
               value=Double.parseDouble(outputtwo.getText());
               outputone.setText("Sin("+value+")=");
               value=Math.sin(value);
               break;
           case "cos":
               value=Double.parseDouble(outputtwo.getText());
               outputone.setText("Cos("+value+")=");
               value=Math.cos(value);
               break;
           case "tan":
               value=Double.parseDouble(outputtwo.getText());
               outputone.setText("Tan("+value+")=");
               value=Math.tan(value);
               break;
           case "log":
               value=Double.parseDouble(outputtwo.getText());
               outputone.setText("log("+value+")=");
               value=Math.log10(value);
               break;
           case "ln":
               value=Double.parseDouble(outputtwo.getText());
               outputone.setText("ln("+value+")");
               value=Math.log(value);
               break;
           case "^":
               value=Math.pow(value, valuetwo);
               break;
            default:
                value=value;
                break;
        }
        outputtwo.setText(String.valueOf(value));
        value=0;
        valuetwo=1;
        
        }
        }
        catch(NumberFormatException e)
        {
            
        }
    }//GEN-LAST:event_equalActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        outputone.setText("");
        outputtwo.setText("");
        i=1;
        subs=1;
        value=0;
        valuetwo=1;
        format.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void onActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onActionPerformed
        // TODO add your handling code here:
        zero.setEnabled(true);
        one.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);
        point.setEnabled(true);
        reset.setEnabled(true);
        del.setEnabled(true);
        equal.setEnabled(true);
        add.setEnabled(true);
        sub.setEnabled(true);
        mul.setEnabled(true);
        div.setEnabled(true);
        mod.setEnabled(true);
        sin.setEnabled(true);
        cos.setEnabled(true);
        tan.setEnabled(true);
        squareroot.setEnabled(true);
        square.setEnabled(true);
        power.setEnabled(true);
        log.setEnabled(true);
        ln.setEnabled(true);
        e.setEnabled(true);
        pi.setEnabled(true);
    }//GEN-LAST:event_onActionPerformed

    String s;
    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        // TODO add your handling code here:
        if(i==1)
        {
        if(!(outputtwo.getText().equals("")))
        {
        s=outputtwo.getText();
        s=s.substring(0, s.length()-1);
        outputtwo.setText(s);
        }
        }
    }//GEN-LAST:event_delActionPerformed

    private void offActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offActionPerformed
        // TODO add your handling code here:
        zero.setEnabled(false);
        one.setEnabled(false);
        two.setEnabled(false);
        three.setEnabled(false);
        four.setEnabled(false);
        five.setEnabled(false);
        six.setEnabled(false);
        seven.setEnabled(false);
        eight.setEnabled(false);
        nine.setEnabled(false);
        point.setEnabled(false);
        reset.setEnabled(false);
        del.setEnabled(false);
        equal.setEnabled(false);
        add.setEnabled(false);
        sub.setEnabled(false);
        mul.setEnabled(false);
        div.setEnabled(false);
        mod.setEnabled(false);
        sin.setEnabled(false);
        cos.setEnabled(false);
        tan.setEnabled(false);
        squareroot.setEnabled(false);
        square.setEnabled(false);
        power.setEnabled(false);
        log.setEnabled(false);
        ln.setEnabled(false);
        e.setEnabled(false);
        pi.setEnabled(false);
        outputone.setText("");
        outputtwo.setText("");
        format.setText("");
        i=1;
        subs=1;
        value=0;
        valuetwo=1;
    }//GEN-LAST:event_offActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
        // TODO add your handling code here:
         if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        valuetwo=value*value;
        outputone.setText(String.valueOf(value)+"^2=");
        outputtwo.setText(String.valueOf(valuetwo));
        i=0;
        }
        else
        {
            outputone.setText("square(x)");
            operation="sqr";
        }
    }//GEN-LAST:event_squareActionPerformed

    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
        // TODO add your handling code here:
        operation="%";
        firstinput();
        outputone.setText(String.valueOf(value)+"%");
    }//GEN-LAST:event_modActionPerformed

    private void squarerootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squarerootActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText("Sqrt("+String.valueOf(value)+")=");
        value=Math.sqrt(value);
        outputtwo.setText(String.valueOf(value));
        i=0;
        }
        else
        {
            outputone.setText("Sqrt(x)");
            operation="sqrt";
        }
    }//GEN-LAST:event_squarerootActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText("Sin("+value+")=");
        value=Math.sin(value);
        outputtwo.setText(String.valueOf(value));
        i=0;
        }
        else
        {
            outputone.setText("Sin(x)");
            operation="sin";
        }
        format.setText("Rad");
    }//GEN-LAST:event_sinActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText("Cos("+value+")=");
        value=Math.cos(value);
        outputtwo.setText(String.valueOf(value));
        i=0;
        }
        else
        {
            outputone.setText("Cos(x)");
            operation="cos";
        }
        format.setText("Rad");
    }//GEN-LAST:event_cosActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText("Tan("+value+")=");
        value=Math.tan(value);
        outputtwo.setText(String.valueOf(value));
        i=0;
        }
        else
        {
            outputone.setText("Tan(x)");
            operation="tan";
        }
        format.setText("Rad");
    }//GEN-LAST:event_tanActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText("log("+value+")=");
        value=Math.log10(value);
        outputtwo.setText(String.valueOf(value));
        i=0;
        }
        else
        {
            outputone.setText("log(x)");
            operation="log";
        }
    }//GEN-LAST:event_logActionPerformed

    private void lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText("ln("+value+")");
        value=Math.log(value);
        outputtwo.setText(String.valueOf(value));
        i=0;
        }
        else
        {
            outputone.setText("ln(x)");
            operation="ln";
        }
    }//GEN-LAST:event_lnActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
        // TODO add your handling code here:
        if(outputtwo.getText().equals(""))
        {
            outputtwo.setText(String.valueOf(Math.PI));
            i=0;
        }
    }//GEN-LAST:event_piActionPerformed

    private void eActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eActionPerformed
        // TODO add your handling code here:
        if(outputtwo.getText().equals(""))
        {
            outputtwo.setText(String.valueOf(Math.E));
            i=0;
        }
    }//GEN-LAST:event_eActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerActionPerformed
        // TODO add your handling code here:
        if(!(outputtwo.getText().equals("")))
        {
        value=Double.parseDouble(outputtwo.getText());
        outputone.setText(String.valueOf(value)+"^");
        operation="^";
        outputtwo.setText("");
        i=1;
        }
    }//GEN-LAST:event_powerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScientificCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton cos;
    private javax.swing.JButton del;
    private javax.swing.JButton div;
    private javax.swing.JButton e;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton five;
    private javax.swing.JLabel format;
    private javax.swing.JButton four;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton ln;
    private javax.swing.JButton log;
    private javax.swing.JButton mod;
    private javax.swing.JButton mul;
    private javax.swing.JButton nine;
    private javax.swing.JButton off;
    private javax.swing.JButton on;
    private javax.swing.JButton one;
    private javax.swing.JLabel outputone;
    private javax.swing.JLabel outputtwo;
    private javax.swing.JButton pi;
    private javax.swing.JButton point;
    private javax.swing.JButton power;
    private javax.swing.JButton reset;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton square;
    private javax.swing.JButton squareroot;
    private javax.swing.JButton sub;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
